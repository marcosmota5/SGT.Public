<UserControl
    x:Class="SGT.Views.VisualizarPropostaView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:SGT.Behaviors"
    xmlns:converters="clr-namespace:SGT.Converters"
    xmlns:customControls="clr-namespace:SGT.CustomControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:SGT.Views"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:syncfusion="clr-namespace:BoldReports.UI.Xaml;assembly=BoldReports.Wpf"
    d:Height="802"
    d:Width="956"
    mah:DialogParticipation.Register="{Binding}"
    Background="White"
    Loaded="UserControl_Loaded"
    Unloaded="UserControl_Unloaded"
    mc:Ignorable="d">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <converters:BooleanAndConverter x:Key="booleanAndConverter" />
        <converters:InverseBooleanConverter x:Key="inverseBooleanConverter" />
        <converters:BooleanToWidthConverter x:Key="booleanToWidthConverter" />
        <Style x:Key="GridViewColumnHeaderStyle1" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Padding" Value="4" />
            <Setter Property="Background" Value="#808080" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Cursor" Value="Arrow" />
            <Setter Property="OverridesDefaultStyle" Value="False" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition />
            <RowDefinition Height="{Binding AlturaGrid, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" d:Height="35" />
        </Grid.RowDefinitions>
        <StackPanel
            Grid.Row="0"
            Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
            IsEnabled="{Binding ControlesHabilitados, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
            Orientation="Horizontal">
            <Menu
                x:Name="mnuMenuPrincipal"
                Grid.Row="0"
                Margin="2,0">
                <MenuItem
                    x:Name="mniOpcoes"
                    Height="29"
                    Margin="0,1,2,0"
                    BorderBrush="LightGray"
                    BorderThickness="1"
                    Header="Opções">
                    <MenuItem.Icon>
                        <iconPacks:PackIconMaterial
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            Foreground="Gray"
                            Kind="Cog" />
                    </MenuItem.Icon>
                    <MenuItem
                        x:Name="mniEnviarEmail"
                        Margin="0,0,2,0"
                        Command="{Binding ComandoEnviarEmail}"
                        Header="Enviar e-mail">
                        <MenuItem.Icon>
                            <iconPacks:PackIconMaterial
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                Foreground="CornflowerBlue"
                                Kind="EmailSend" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        x:Name="mniResponderEmail"
                        Margin="2,0,0,0"
                        Command="{Binding ComandoResponderEmail}"
                        Header="Responder e-mail">
                        <MenuItem.Icon>
                            <iconPacks:PackIconMaterial
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                Foreground="MediumSeaGreen"
                                Kind="Reply" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
            </Menu>
            <ComboBox
                x:Name="cboConjunto"
                Margin="2,0"
                VerticalAlignment="Center"
                ItemsSource="{Binding ListaParametroConjunto, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                SelectedItem="{Binding ParametroConjunto, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <ComboBox.Style>
                    <Style BasedOn="{StaticResource MahApps.Styles.ComboBox}" TargetType="{x:Type ComboBox}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent3}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="25" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <iconPacks:PackIconMaterial
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                Foreground="{Binding Cor}"
                                Kind="{Binding Icone}" />
                            <TextBlock Grid.Column="1" Text="{Binding Nome}" />
                        </Grid>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <ComboBox
                x:Name="cboDescricao"
                Margin="2,0"
                VerticalAlignment="Center"
                ItemsSource="{Binding ListaParametroExibicaoDescricao, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                SelectedItem="{Binding ParametroExibicaoDescricao, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <ComboBox.Style>
                    <Style BasedOn="{StaticResource MahApps.Styles.ComboBox}" TargetType="{x:Type ComboBox}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent3}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="25" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <iconPacks:PackIconMaterial
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                Foreground="{Binding Cor}"
                                Kind="{Binding Icone}" />
                            <TextBlock Grid.Column="1" Text="{Binding Nome}" />
                        </Grid>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <ComboBox
                x:Name="cboCodigos"
                Margin="2,0"
                VerticalAlignment="Center"
                ItemsSource="{Binding ListaParametroExibicaoCodigos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                SelectedItem="{Binding ParametroExibicaoCodigos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <ComboBox.Style>
                    <Style BasedOn="{StaticResource MahApps.Styles.ComboBox}" TargetType="{x:Type ComboBox}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent3}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="25" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <iconPacks:PackIconMaterial
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                Foreground="{Binding Cor}"
                                Kind="{Binding Icone}" />
                            <TextBlock Grid.Column="1" Text="{Binding Nome}" />
                        </Grid>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <ComboBox
                x:Name="cboNCM"
                Margin="2,0"
                VerticalAlignment="Center"
                ItemsSource="{Binding ListaParametroNCM, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                SelectedItem="{Binding ParametroNCM, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <ComboBox.Style>
                    <Style BasedOn="{StaticResource MahApps.Styles.ComboBox}" TargetType="{x:Type ComboBox}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent3}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="25" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <iconPacks:PackIconMaterial
                                Grid.Column="0"
                                VerticalAlignment="Center"
                                Foreground="{Binding Cor}"
                                Kind="{Binding Icone}" />
                            <TextBlock Grid.Column="1" Text="{Binding Nome}" />
                        </Grid>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </StackPanel>
        <mah:MetroTabControl
            x:Name="tabVisualizacao"
            Grid.Row="1"
            mah:HeaderedControlHelper.HeaderFontSize="16"
            mah:TabControlHelper.Underlined="TabPanel"
            Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
            Style="{DynamicResource MahApps.Styles.TabControl.Animated}">
            <mah:MetroTabControl.Resources>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
                </Style>
            </mah:MetroTabControl.Resources>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding ComandoAlteraParametros}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <mah:MetroTabItem x:Name="tbiVisualizacao" Header="Visualização">
                <syncfusion:ReportViewer Name="reportViewer" />
            </mah:MetroTabItem>
            <mah:MetroTabItem
                x:Name="tbiDadosEditaveis"
                Header="Dados editáveis"
                ToolTip="Opção disponível apenas para propostas não enviadas"
                Visibility="{Binding Path=EdicaoHabilitada, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                <GroupBox
                    x:Name="grpTextoTermos"
                    Grid.Row="1"
                    Margin="2"
                    Header="Termos">
                    <AdornerDecorator x:Name="adTextoTermos">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <StackPanel
                                x:Name="spTextoTermos"
                                IsEnabled="{Binding EdicaoHabilitada, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                Orientation="Vertical">
                                <TextBox
                                    x:Name="txtTermoCabecalho"
                                    Margin="2"
                                    VerticalAlignment="Center"
                                    mah:TextBoxHelper.ClearTextButton="{Binding RelativeSource={RelativeSource Self}, Path=(mah:TextBoxHelper.HasText), Mode=OneWay}"
                                    mah:TextBoxHelper.IsSpellCheckContextMenuEnabled="True"
                                    mah:TextBoxHelper.UseFloatingWatermark="True"
                                    mah:TextBoxHelper.Watermark="Cabeçalho"
                                    mah:TextBoxHelper.WatermarkAlignment="Right"
                                    AcceptsReturn="True"
                                    Text="{Binding Proposta.TextoPadrao, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    TextWrapping="Wrap" />
                                <TextBox
                                    x:Name="txtTermoObservacoes"
                                    Margin="2"
                                    VerticalAlignment="Center"
                                    mah:TextBoxHelper.ClearTextButton="{Binding RelativeSource={RelativeSource Self}, Path=(mah:TextBoxHelper.HasText), Mode=OneWay}"
                                    mah:TextBoxHelper.IsSpellCheckContextMenuEnabled="True"
                                    mah:TextBoxHelper.UseFloatingWatermark="True"
                                    mah:TextBoxHelper.Watermark="Observações"
                                    mah:TextBoxHelper.WatermarkAlignment="Right"
                                    AcceptsReturn="True"
                                    Text="{Binding Proposta.Observacoes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    TextWrapping="Wrap" />
                                <TextBox
                                    x:Name="txtTermoPrazoEntrega"
                                    Margin="2"
                                    VerticalAlignment="Center"
                                    mah:TextBoxHelper.ClearTextButton="{Binding RelativeSource={RelativeSource Self}, Path=(mah:TextBoxHelper.HasText), Mode=OneWay}"
                                    mah:TextBoxHelper.IsSpellCheckContextMenuEnabled="True"
                                    mah:TextBoxHelper.UseFloatingWatermark="True"
                                    mah:TextBoxHelper.Watermark="Prazo de entrega"
                                    mah:TextBoxHelper.WatermarkAlignment="Right"
                                    AcceptsReturn="True"
                                    Text="{Binding Proposta.PrazoEntrega, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    TextWrapping="Wrap" />
                                <TextBox
                                    x:Name="txtTermoCondicaoPagamento"
                                    Margin="2"
                                    VerticalAlignment="Center"
                                    mah:TextBoxHelper.ClearTextButton="{Binding RelativeSource={RelativeSource Self}, Path=(mah:TextBoxHelper.HasText), Mode=OneWay}"
                                    mah:TextBoxHelper.IsSpellCheckContextMenuEnabled="True"
                                    mah:TextBoxHelper.UseFloatingWatermark="True"
                                    mah:TextBoxHelper.Watermark="Condição de pagamento"
                                    mah:TextBoxHelper.WatermarkAlignment="Right"
                                    AcceptsReturn="True"
                                    Text="{Binding Proposta.CondicaoPagamento, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    TextWrapping="Wrap" />
                                <TextBox
                                    x:Name="txtTermoGarantia"
                                    Margin="2"
                                    VerticalAlignment="Center"
                                    mah:TextBoxHelper.ClearTextButton="{Binding RelativeSource={RelativeSource Self}, Path=(mah:TextBoxHelper.HasText), Mode=OneWay}"
                                    mah:TextBoxHelper.IsSpellCheckContextMenuEnabled="True"
                                    mah:TextBoxHelper.UseFloatingWatermark="True"
                                    mah:TextBoxHelper.Watermark="Garantia"
                                    mah:TextBoxHelper.WatermarkAlignment="Right"
                                    AcceptsReturn="True"
                                    Text="{Binding Proposta.Garantia, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    TextWrapping="Wrap" />
                                <TextBox
                                    x:Name="txtTermoValidade"
                                    Margin="2"
                                    VerticalAlignment="Center"
                                    mah:TextBoxHelper.ClearTextButton="{Binding RelativeSource={RelativeSource Self}, Path=(mah:TextBoxHelper.HasText), Mode=OneWay}"
                                    mah:TextBoxHelper.IsSpellCheckContextMenuEnabled="True"
                                    mah:TextBoxHelper.UseFloatingWatermark="True"
                                    mah:TextBoxHelper.Watermark="Validade"
                                    mah:TextBoxHelper.WatermarkAlignment="Right"
                                    AcceptsReturn="True"
                                    Text="{Binding Proposta.Validade, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    TextWrapping="Wrap" />
                            </StackPanel>
                        </ScrollViewer>
                    </AdornerDecorator>
                </GroupBox>
            </mah:MetroTabItem>
        </mah:MetroTabControl>
        <Border
            Grid.Row="2"
            BorderBrush="SlateGray"
            BorderThickness="0,1,0,0">
            <StackPanel
                x:Name="grdBarraDeStatus"
                Background="LightGray"
                IsEnabled="{Binding ControlesHabilitados, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                <mah:MetroProgressBar
                    x:Name="pgbProgresso"
                    Height="10"
                    IsIndeterminate="{Binding ProgressoEhIndeterminavel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Maximum="100"
                    Minimum="0"
                    Visibility="{Binding Path=ProgressoVisivel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" />
                <StatusBar Name="stbStatus" Background="LightGray">
                    <TextBlock
                        x:Name="tblStatus"
                        Foreground="Black"
                        Text="{Binding TextoStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </StatusBar>
            </StackPanel>
        </Border>
        <Rectangle
            Grid.RowSpan="3"
            d:Visibility="Collapsed"
            Fill="{DynamicResource MahApps.Brushes.ThemeBackground}"
            Visibility="{Binding CarregamentoVisivel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" />
        <Grid
            Grid.RowSpan="3"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            d:Visibility="Collapsed"
            Visibility="{Binding CarregamentoVisivel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="24" />
            </Grid.RowDefinitions>
            <mah:ProgressRing Grid.Row="0" />
            <TextBlock
                Grid.Row="1"
                Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}"
                Text="Carregando..." />
        </Grid>
    </Grid>
</UserControl>
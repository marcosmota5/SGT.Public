<UserControl
    x:Class="SGT.Views.RegistroManifestacoesView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:SGT.Behaviors"
    xmlns:converters="clr-namespace:SGT.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helperclasses="clr-namespace:SGT.HelperClasses"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:SGT.Views"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:proxies="clr-namespace:SGT.Proxies"
    xmlns:regras="clr-namespace:SGT.Regras"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    xmlns:viewmodels="clr-namespace:SGT.ViewModels"
    d:Background="White"
    d:Height="560"
    d:Width="780"
    mah:DialogParticipation.Register="{Binding}"
    Loaded="UserControl_Loaded"
    Unloaded="UserControl_Unloaded"
    mc:Ignorable="d">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <converters:BooleanAndConverter x:Key="booleanAndConverter" />
        <converters:InverseBooleanConverter x:Key="inverseBooleanConverter" />
        <CollectionViewSource x:Key="list" Source="{Binding ListaEstados}" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="80" />
            <RowDefinition Height="140" />
            <RowDefinition />
            <RowDefinition Height="40" />
        </Grid.RowDefinitions>
        <Menu x:Name="mnuMenuPrincipal" Grid.Row="0">
            <MenuItem
                x:Name="mniSalvar"
                Click="mniSalvar_Click"
                Command="{Binding ComandoSalvar}"
                Header="Salvar"
                IsEnabled="{Binding PermiteSalvar, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                ToolTipService.ShowOnDisabled="True"
                Visibility="{Binding Path=SalvarVisivel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                <MenuItem.Icon>
                    <iconPacks:PackIconMaterial
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Foreground="SteelBlue"
                        Kind="ContentSave" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                x:Name="mniEditar"
                Command="{Binding ComandoEditar}"
                Header="Editar"
                IsEnabled="{Binding PermiteEditar, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                <MenuItem.Icon>
                    <iconPacks:PackIconMaterial
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Foreground="LightSalmon"
                        Kind="Pencil" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem
                x:Name="mniCancelar"
                Command="{Binding ComandoCancelar}"
                Header="Cancelar"
                IsEnabled="{Binding PermiteCancelar, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                Visibility="{Binding Path=CancelarVisivel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                <MenuItem.Icon>
                    <iconPacks:PackIconMaterial
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        Foreground="IndianRed"
                        Kind="Cancel" />
                </MenuItem.Icon>
            </MenuItem>
        </Menu>
        <GroupBox
            Grid.Row="1"
            Margin="2"
            Header="Dados gerais"
            IsEnabled="{Binding ControlesHabilitados, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
            <AdornerDecorator>
                <Grid Width="460" HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ComboBox
                        x:Name="cboPrioridadeManifestacao"
                        Grid.Column="0"
                        Margin="2"
                        VerticalAlignment="Center"
                        mah:TextBoxHelper.IsWaitingForData="True"
                        mah:TextBoxHelper.UseFloatingWatermark="True"
                        mah:TextBoxHelper.Watermark="Prioridade"
                        DisplayMemberPath="Nome"
                        ItemsSource="{Binding ListaPrioridadesManifestacao, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBox.SelectedItem>
                            <Binding
                                Mode="TwoWay"
                                Path="RegistroManifestacao.PrioridadeManifestacao"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <regras:RegraCampoVazio />
                                </Binding.ValidationRules>
                            </Binding>
                        </ComboBox.SelectedItem>
                    </ComboBox>
                    <ComboBox
                        x:Name="cboTipoManifestacao"
                        Grid.Column="1"
                        Margin="2"
                        VerticalAlignment="Center"
                        mah:TextBoxHelper.IsWaitingForData="True"
                        mah:TextBoxHelper.UseFloatingWatermark="True"
                        mah:TextBoxHelper.Watermark="Tipo"
                        DisplayMemberPath="Nome"
                        ItemsSource="{Binding ListaTiposManifestacao, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBox.SelectedItem>
                            <Binding
                                Mode="TwoWay"
                                Path="RegistroManifestacao.TipoManifestacao"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <regras:RegraCampoVazio />
                                </Binding.ValidationRules>
                            </Binding>
                        </ComboBox.SelectedItem>
                    </ComboBox>
                    <ComboBox
                        x:Name="cboStatusManifestacao"
                        Grid.Column="2"
                        Margin="2"
                        VerticalAlignment="Center"
                        mah:TextBoxHelper.IsWaitingForData="True"
                        mah:TextBoxHelper.UseFloatingWatermark="True"
                        mah:TextBoxHelper.Watermark="Status"
                        DisplayMemberPath="Nome"
                        IsEnabled="{Binding StatusHabilitado, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        ItemsSource="{Binding ListaStatusManifestacao, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBox.SelectedItem>
                            <Binding
                                Mode="TwoWay"
                                Path="StatusManifestacaoSelecionado"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <regras:RegraCampoVazio />
                                </Binding.ValidationRules>
                            </Binding>
                        </ComboBox.SelectedItem>
                    </ComboBox>
                </Grid>
            </AdornerDecorator>
        </GroupBox>
        <Grid Grid.Row="2" IsEnabled="{Binding ControlesHabilitados, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <GroupBox
                Grid.Column="0"
                Margin="2"
                Header="Dados da abertura">
                <GroupBox.Style>
                    <Style BasedOn="{StaticResource MahApps.Styles.GroupBox}" TargetType="{x:Type GroupBox}">
                        <Setter Property="Grid.ColumnSpan" Value="1" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DadosFechamentoVisivel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                <Setter Property="Grid.ColumnSpan" Value="2" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </GroupBox.Style>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="160" />
                        </Grid.ColumnDefinitions>
                        <TextBox
                            x:Name="txtDescricaoAbertura"
                            Grid.Column="0"
                            Margin="2"
                            VerticalAlignment="Center"
                            d:Text="Nome"
                            mah:TextBoxHelper.IsSpellCheckContextMenuEnabled="True"
                            mah:TextBoxHelper.UseFloatingWatermark="True"
                            mah:TextBoxHelper.Watermark="Descrição"
                            mah:TextBoxHelper.WatermarkAlignment="Right">
                            <TextBox.Text>
                                <Binding
                                    Mode="TwoWay"
                                    Path="RegistroManifestacao.DescricaoAbertura"
                                    UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <regras:RegraCampoVazio />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <mah:DateTimePicker
                            x:Name="datDataAbertura"
                            Grid.Column="1"
                            Margin="2"
                            VerticalAlignment="Center"
                            mah:TextBoxHelper.UseFloatingWatermark="True"
                            mah:TextBoxHelper.Watermark="Data da abertura"
                            Culture="pt-BR"
                            IsEnabled="False"
                            IsTodayHighlighted="True"
                            SelectedDateFormat="Short"
                            SelectedTimeFormat="Short">
                            <mah:DateTimePicker.SelectedDateTime>
                                <Binding
                                    Mode="TwoWay"
                                    Path="RegistroManifestacao.DataAbertura"
                                    UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <regras:RegraCampoVazio />
                                    </Binding.ValidationRules>
                                </Binding>
                            </mah:DateTimePicker.SelectedDateTime>
                        </mah:DateTimePicker>
                    </Grid>
                    <TextBox
                        x:Name="txtNomePessoaAbertura"
                        Grid.Row="1"
                        Grid.Column="0"
                        Margin="2"
                        VerticalAlignment="Center"
                        d:Text="Nome"
                        mah:TextBoxHelper.UseFloatingWatermark="True"
                        mah:TextBoxHelper.Watermark="Solicitante"
                        mah:TextBoxHelper.WatermarkAlignment="Right"
                        IsEnabled="False">
                        <TextBox.Text>
                            <Binding
                                Mode="TwoWay"
                                Path="RegistroManifestacao.NomePessoaAbertura"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <regras:RegraCampoVazio />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBox
                        x:Name="txtEmailPessoaAbertura"
                        Grid.Row="1"
                        Grid.Column="1"
                        Margin="2"
                        VerticalAlignment="Center"
                        d:Text="Nome"
                        mah:TextBoxHelper.UseFloatingWatermark="True"
                        mah:TextBoxHelper.Watermark="E-mail"
                        mah:TextBoxHelper.WatermarkAlignment="Right"
                        IsEnabled="False">
                        <TextBox.Text>
                            <Binding
                                Mode="TwoWay"
                                Path="RegistroManifestacao.EmailPessoaAbertura"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <regras:RegraCampoVazio />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
            </GroupBox>
            <GroupBox
                Grid.Column="1"
                Margin="2"
                Header="Dados do fechamento"
                Visibility="{Binding DadosFechamentoVisivel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="160" />
                        </Grid.ColumnDefinitions>
                        <TextBox
                            x:Name="txtDescricaoFechamento"
                            Grid.Column="0"
                            Margin="2"
                            VerticalAlignment="Center"
                            d:Text="Nome"
                            mah:TextBoxHelper.IsSpellCheckContextMenuEnabled="True"
                            mah:TextBoxHelper.UseFloatingWatermark="True"
                            mah:TextBoxHelper.Watermark="Descrição"
                            mah:TextBoxHelper.WatermarkAlignment="Right"
                            Visibility="{Binding DadosFechamentoVisivel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                            <TextBox.Text>
                                <Binding
                                    Mode="TwoWay"
                                    Path="RegistroManifestacao.DescricaoFechamento"
                                    UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <regras:RegraCampoVazio />
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <mah:DateTimePicker
                            x:Name="datDataFechamento"
                            Grid.Column="1"
                            Margin="2"
                            VerticalAlignment="Center"
                            mah:TextBoxHelper.UseFloatingWatermark="True"
                            mah:TextBoxHelper.Watermark="Data do fechamento"
                            Culture="pt-BR"
                            IsTodayHighlighted="True"
                            SelectedDateFormat="Short"
                            SelectedTimeFormat="Short"
                            Visibility="{Binding DadosFechamentoVisivel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                            <mah:DateTimePicker.SelectedDateTime>
                                <Binding
                                    Mode="TwoWay"
                                    Path="RegistroManifestacao.DataFechamento"
                                    UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <regras:RegraCampoVazio />
                                    </Binding.ValidationRules>
                                </Binding>
                            </mah:DateTimePicker.SelectedDateTime>
                        </mah:DateTimePicker>
                    </Grid>
                    <TextBox
                        x:Name="txtNomePessoaFechamento"
                        Grid.Row="1"
                        Grid.Column="0"
                        Margin="2"
                        VerticalAlignment="Center"
                        d:Text="Nome"
                        mah:TextBoxHelper.UseFloatingWatermark="True"
                        mah:TextBoxHelper.Watermark="Responsável"
                        mah:TextBoxHelper.WatermarkAlignment="Right"
                        Visibility="{Binding DadosFechamentoVisivel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                        <TextBox.Text>
                            <Binding
                                Mode="TwoWay"
                                Path="RegistroManifestacao.NomePessoaFechamento"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <regras:RegraCampoVazio />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <TextBox
                        x:Name="txtEmailPessoaFechamento"
                        Grid.Row="1"
                        Grid.Column="1"
                        Margin="2"
                        VerticalAlignment="Center"
                        d:Text="Nome"
                        mah:TextBoxHelper.UseFloatingWatermark="True"
                        mah:TextBoxHelper.Watermark="E-mail"
                        mah:TextBoxHelper.WatermarkAlignment="Right"
                        Visibility="{Binding DadosFechamentoVisivel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                        <TextBox.Text>
                            <Binding
                                Mode="TwoWay"
                                Path="RegistroManifestacao.EmailPessoaFechamento"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <regras:RegraCampoVazio />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
            </GroupBox>
        </Grid>
        <GroupBox
            Grid.Row="3"
            Margin="2"
            Header="Outras informações">
            <AdornerDecorator>
                <Grid>
                    <TabControl
                        x:Name="tabPropostas"
                        Grid.Row="1"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        mah:HeaderedControlHelper.HeaderFontSize="14"
                        mah:TabControlHelper.Underlined="TabPanel"
                        Style="{DynamicResource MahApps.Styles.TabControl.Animated}">
                        <mah:MetroTabItem x:Name="tbiComentarios" Header="Comentários">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Menu Grid.Row="0" IsEnabled="{Binding ControlesHabilitados, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                    <MenuItem
                                        Command="{Binding ComandoAdicionarComentario}"
                                        Header="Novo"
                                        IsEnabled="{Binding PermiteAdicionarComentario, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                        <MenuItem.Icon>
                                            <iconPacks:PackIconMaterial
                                                Grid.Column="0"
                                                VerticalAlignment="Center"
                                                Foreground="LightSeaGreen"
                                                Kind="Plus" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem
                                        Command="{Binding ComandoDeletarComentario}"
                                        Header="Deletar"
                                        IsEnabled="{Binding PermiteDeletarComentario, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        Visibility="{Binding Path=DeletarComentarioVisivel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                                        <MenuItem.Icon>
                                            <iconPacks:PackIconMaterial
                                                Grid.Column="0"
                                                VerticalAlignment="Center"
                                                Foreground="Gray"
                                                Kind="Delete" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </Menu>
                                <syncfusion:SfDataGrid
                                    x:Name="dtgComentarios"
                                    Grid.Row="1"
                                    AllowDrop="False"
                                    ItemsSource="{Binding ListaComentarios, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, IsAsync=True}"
                                    QueryRowHeight="dtgComentarios_QueryRowHeight"
                                    SelectedItem="{Binding ComentarioSelecionado, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}">
                                    <syncfusion:SfDataGrid.Columns>
                                        <syncfusion:GridDateTimeColumn
                                            ColumnSizer="SizeToCells"
                                            CustomPattern="dd/MM/yyyy HH:mm"
                                            HeaderText="Data"
                                            MappingName="DataInsercao"
                                            Pattern="CustomPattern" />
                                        <syncfusion:GridTextColumn
                                            Width="400"
                                            HeaderText="Comentário"
                                            MappingName="Comentario"
                                            TextWrapping="Wrap" />
                                        <syncfusion:GridTextColumn
                                            ColumnSizer="SizeToCells"
                                            HeaderText="Nome"
                                            MappingName="NomePessoaInsercao" />
                                        <syncfusion:GridTextColumn
                                            ColumnSizer="SizeToCells"
                                            HeaderText="E-mail"
                                            MappingName="EmailPessoaInsercao" />
                                    </syncfusion:SfDataGrid.Columns>
                                </syncfusion:SfDataGrid>
                            </Grid>
                        </mah:MetroTabItem>
                        <mah:MetroTabItem x:Name="tbiImagens" Header="Imagens">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Menu Grid.Row="0" IsEnabled="{Binding ControlesHabilitados, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                    <MenuItem
                                        Command="{Binding ComandoAdicionarImagem}"
                                        Header="Novo"
                                        IsEnabled="{Binding PermiteAdicionarImagem, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                        <MenuItem.Icon>
                                            <iconPacks:PackIconMaterial
                                                Grid.Column="0"
                                                VerticalAlignment="Center"
                                                Foreground="LightSeaGreen"
                                                Kind="Plus" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem
                                        Command="{Binding ComandoDeletarImagem}"
                                        Header="Deletar"
                                        IsEnabled="{Binding PermiteDeletarImagem, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        Visibility="{Binding Path=DeletarImagemVisivel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                                        <MenuItem.Icon>
                                            <iconPacks:PackIconMaterial
                                                Grid.Column="0"
                                                VerticalAlignment="Center"
                                                Foreground="Gray"
                                                Kind="Delete" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </Menu>
                                <Grid Grid.Row="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="20" />
                                    </Grid.RowDefinitions>
                                    <syncfusion:SfDataGrid
                                        Grid.Row="0"
                                        ItemsSource="{Binding ListaImagens, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, IsAsync=True}"
                                        RowHeight="100"
                                        SelectedItem="{Binding ImagemSelecionada, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                                        ToolTip="Clique com o botão direito para ver as opções">
                                        <syncfusion:SfDataGrid.Resources>
                                            <proxies:BindingProxy x:Key="proxy" Data="{Binding}" />
                                        </syncfusion:SfDataGrid.Resources>
                                        <syncfusion:SfDataGrid.RecordContextMenu>
                                            <ContextMenu>
                                                <MenuItem
                                                    x:Name="mniVisualizarImagem"
                                                    Command="{Binding Path=Data.ComandoVisualizarImagem, Source={StaticResource proxy}}"
                                                    Header="Visualizar">
                                                    <MenuItem.Icon>
                                                        <iconPacks:PackIconMaterial
                                                            Margin="2"
                                                            VerticalAlignment="Center"
                                                            Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                                            Kind="Eye" />
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                                <MenuItem
                                                    x:Name="mniSalvarImagem"
                                                    Command="{Binding Path=Data.ComandoSalvarImagem, Source={StaticResource proxy}}"
                                                    Header="Salvar como">
                                                    <MenuItem.Icon>
                                                        <iconPacks:PackIconMaterial
                                                            Margin="2"
                                                            VerticalAlignment="Center"
                                                            Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                                            Kind="ContentSaveOutline" />
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                            </ContextMenu>
                                        </syncfusion:SfDataGrid.RecordContextMenu>
                                        <syncfusion:SfDataGrid.Columns>
                                            <syncfusion:GridDateTimeColumn
                                                CustomPattern="dd/MM/yyyy HH:mm"
                                                HeaderText="Data"
                                                MappingName="DataInsercao"
                                                Pattern="CustomPattern" />
                                            <syncfusion:GridImageColumn
                                                AllowFiltering="False"
                                                AllowSorting="False"
                                                HeaderText="Imagem"
                                                ImageHeight="100"
                                                ImageWidth="100"
                                                MappingName="Imagem" />
                                            <syncfusion:GridTextColumn HeaderText="Nome" MappingName="NomePessoaInsercao" />
                                            <syncfusion:GridTextColumn HeaderText="E-mail" MappingName="EmailPessoaInsercao" />
                                        </syncfusion:SfDataGrid.Columns>
                                    </syncfusion:SfDataGrid>
                                    <TextBlock
                                        Grid.Row="1"
                                        Margin="2"
                                        d:Text="Tamanho total: 1248 kb"
                                        Text="{Binding TextoTamanhoTotalImagens, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding TamanhoExcedido}" Value="True">
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Grid>
                        </mah:MetroTabItem>
                        <mah:MetroTabItem x:Name="tbiHistorico" Header="Histórico">
                            <syncfusion:SfDataGrid Grid.Row="1" ItemsSource="{Binding ListaHistorico, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, IsAsync=True}">
                                <syncfusion:SfDataGrid.Columns>
                                    <syncfusion:GridDateTimeColumn
                                        CustomPattern="dd/MM/yyyy HH:mm"
                                        HeaderText="Data"
                                        MappingName="DataAlteracao"
                                        Pattern="CustomPattern" />
                                    <syncfusion:GridTextColumn HeaderText="Descrição" MappingName="DescricaoAlteracao" />
                                    <syncfusion:GridTextColumn HeaderText="Nome" MappingName="NomePessoaAlteracao" />
                                    <syncfusion:GridTextColumn HeaderText="E-mail" MappingName="EmailPessoaAlteracao" />
                                </syncfusion:SfDataGrid.Columns>
                            </syncfusion:SfDataGrid>
                        </mah:MetroTabItem>
                        <mah:MetroTabItem x:Name="tbiArquivosLog" Header="Logs">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Menu Grid.Row="0" IsEnabled="{Binding ControlesHabilitados, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                    <MenuItem
                                        Command="{Binding ComandoAdicionarLog}"
                                        Header="Novo"
                                        IsEnabled="{Binding PermiteAdicionarLog, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                        <MenuItem.Icon>
                                            <iconPacks:PackIconMaterial
                                                Grid.Column="0"
                                                VerticalAlignment="Center"
                                                Foreground="LightSeaGreen"
                                                Kind="Plus" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem
                                        Command="{Binding ComandoDeletarLog}"
                                        Header="Deletar"
                                        IsEnabled="{Binding PermiteDeletarLog, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        Visibility="{Binding Path=DeletarLogVisivel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
                                        <MenuItem.Icon>
                                            <iconPacks:PackIconMaterial
                                                Grid.Column="0"
                                                VerticalAlignment="Center"
                                                Foreground="Gray"
                                                Kind="Delete" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </Menu>
                                <Grid Grid.Row="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="20" />
                                    </Grid.RowDefinitions>
                                    <syncfusion:SfDataGrid
                                        Grid.Row="0"
                                        ItemsSource="{Binding ListaLogs, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, IsAsync=True}"
                                        RowHeight="100"
                                        SelectedItem="{Binding LogSelecionado, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                                        ToolTip="Clique com o botão direito para ver as opções">
                                        <syncfusion:SfDataGrid.Resources>
                                            <proxies:BindingProxy x:Key="proxy" Data="{Binding}" />
                                        </syncfusion:SfDataGrid.Resources>
                                        <syncfusion:SfDataGrid.RecordContextMenu>
                                            <ContextMenu>
                                                <MenuItem
                                                    x:Name="mniVisualizarLog"
                                                    Command="{Binding Path=Data.ComandoVisualizarLog, Source={StaticResource proxy}}"
                                                    Header="Visualizar">
                                                    <MenuItem.Icon>
                                                        <iconPacks:PackIconMaterial
                                                            Margin="2"
                                                            VerticalAlignment="Center"
                                                            Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                                            Kind="Eye" />
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                                <MenuItem
                                                    x:Name="mniSalvarLog"
                                                    Command="{Binding Path=Data.ComandoSalvarLog, Source={StaticResource proxy}}"
                                                    Header="Salvar como">
                                                    <MenuItem.Icon>
                                                        <iconPacks:PackIconMaterial
                                                            Margin="2"
                                                            VerticalAlignment="Center"
                                                            Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                                            Kind="ContentSaveOutline" />
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                            </ContextMenu>
                                        </syncfusion:SfDataGrid.RecordContextMenu>
                                        <syncfusion:SfDataGrid.Columns>
                                            <syncfusion:GridDateTimeColumn
                                                CustomPattern="dd/MM/yyyy HH:mm"
                                                HeaderText="Data"
                                                MappingName="DataInsercao"
                                                Pattern="CustomPattern" />
                                            <syncfusion:GridTextColumn HeaderText="Arquivo" MappingName="NomeArquivo" />
                                            <syncfusion:GridTextColumn HeaderText="Nome" MappingName="NomePessoaInsercao" />
                                            <syncfusion:GridTextColumn HeaderText="E-mail" MappingName="EmailPessoaInsercao" />
                                        </syncfusion:SfDataGrid.Columns>
                                    </syncfusion:SfDataGrid>
                                    <TextBlock
                                        Grid.Row="1"
                                        Margin="2"
                                        d:Text="Tamanho total: 1248 kb"
                                        Text="{Binding TextoTamanhoTotalLogs, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding TamanhoLogExcedido}" Value="True">
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Grid>
                        </mah:MetroTabItem>
                    </TabControl>
                </Grid>
            </AdornerDecorator>
        </GroupBox>
        <Grid
            x:Name="grdStatus"
            Grid.Row="4"
            Margin="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
                <RowDefinition Height="1.5*" />
            </Grid.RowDefinitions>
            <mah:MetroProgressBar
                x:Name="pgbProgresso"
                Grid.Row="0"
                IsIndeterminate="{Binding ProgressoEhIndeterminavel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, IsAsync=True}"
                Maximum="100"
                Minimum="0"
                Visibility="{Binding ProgressoVisivel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}, IsAsync=True}"
                Value="{Binding ValorProgresso, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, IsAsync=True}" />
            <TextBlock
                x:Name="tblStatus"
                Grid.Row="0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                d:Text="0%"
                FontSize="12"
                Foreground="Black"
                Text="{Binding TextoProgresso, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, IsAsync=True}"
                Visibility="{Binding ProgressoVisivel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}, IsAsync=True}" />
            <StatusBar Grid.Row="1" Background="LightGray">
                <TextBlock
                    x:Name="tblStatusBar"
                    Foreground="DarkSlateGray"
                    Text="{Binding MensagemStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </StatusBar>
        </Grid>
        <Rectangle
            Grid.RowSpan="5"
            d:Visibility="Collapsed"
            Fill="{DynamicResource MahApps.Brushes.ThemeBackground}"
            Visibility="{Binding CarregamentoVisivel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}" />
        <Grid
            Grid.RowSpan="5"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            d:Visibility="Collapsed"
            Visibility="{Binding CarregamentoVisivel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToVis}}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="24" />
            </Grid.RowDefinitions>
            <mah:ProgressRing Grid.Row="0" />
            <TextBlock
                Grid.Row="1"
                Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}"
                Text="Carregando..." />
        </Grid>
    </Grid>
</UserControl>